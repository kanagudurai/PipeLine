# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
- master
variables:
  sdk: "iphoneos"
  configuration: "Release"
  myPubKey: 'id_rsa.pub'

# pool: "CodeWayMac11-12.5.1"
  
pool:
  vmImage: 'macos-latest'

########################################
# Build App and test it locally        #
######################################## 
#- task: CocoaPods@0
#  inputs:
#    forceRepoUpdate: false

stages:
  - stage: Build_Export_And_Publish
    displayName: Build and Export with Xcode and Push to Nexus 
    jobs:
      - job: Build_And_Export
        timeoutInMinutes: 0
        displayName: Build and Export iOS with Xcode
        steps:
              # - task: CmdLine@2
              #   inputs:
              #     script: 'sudo xcode-select -s /Applications/Xcode_13.2.app'
              - task: InstallSSHKey@0
                inputs:
                  knownHostsEntry: 'github.azc.ext.hp.com,44.239.89.60 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDbp+q+E45DWcJbOKhEOwFQ+jrcAr+joBqY7qbI24Gzfrzl73AEBjEZtKA4DenRJVV8paZkUVqT59HxmdoKvnmA='
                  sshPublicKey:  'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDaKO1nFbxLxqwqUIMJtCjmxT0cm1zeH8MlNHbzN3Jf/wPU2XAE7Yv6L0PZrUFfqWW5/Pc6p9V/4ZxsjafqJTCREx8S/Y8Ff85PMelIc5ovfnqoh2/EVlpHNXwhqbwGYkz4ocN5LPMn71mRQ9AgxPRh787R+chBabv7NTDy5bwUCsfAu9nBtnDLCecZePtNoMWhu7BeoCA35EWM2dmeI5f/uxbgqcKXDzfrma9DI4ZudnjmqI7XBmEW1f2z3C9+/R5p1O1IdLJsRD58hWYI9NVFXJYozo0biXLSUYlSZXiWmLVDeYa0jQXiIMFZfX4C33O5jja32ZqbaFjpTOcR8ES5 kanagu-photon@bgmb130518'
                  sshPassphrase: ''
                  sshKeySecureFile: 'id_rsa'

              # - task: Xcode@5
              #   inputs:
              #     actions: 'clean build'
              #     exportPath: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)'
              #     xcodeVersion: 'default' # Options: default, 10, 9, 8, specifyPath
              #     configuration: '$(configuration)'
              #     sdk: '$(sdk)'
              #     scheme: 'iOSHelloWorld'
              #     # destinationPlatformOption: 'iOS'
              #     # destinationSimulators: 'iPhone 8'
              #     publishJUnitResults: true

              ###############################################
              # Run automated UI Tests on physical devices  #
              ###############################################    
              - task: InstallAppleProvisioningProfile@1
                inputs:
                  provisioningProfileLocation: 'secureFiles'
                  provProfileSecureFile: 'sridhardistributionprofile.mobileprovision'

              - task: InstallAppleCertificate@2
                inputs:
                  certSecureFile: 'SridharDistribution.p12'
                  certPwd: '1234'
                  keychain: 'temp'
                  
              - task: Xcode@5
                displayName: 'Running tests'
                inputs:
                  actions: 'test'
                  configuration: 'Debug'
                  sdk: 'iphoneos'
                  #destinationPlatformOption: 'iOS'
                  #destinationSimulators: 'iPhone 8'
                  destinationDevices: 'Raisaâ€™s iPad'
                  packageApp: false
                  testRunTitle: 'Testing App'
                  xcWorkspacePath: iOSHelloWorld.xcodeproj
                  scheme: iOSHelloWorld
                  xcodeVersion: 'default'
                  useXcpretty: true
                  publishJUnitResults: true
                  #args: '-destination "platform=iOS Simulator,name=iPhone 8"'
                  #args: '-derivedDataPath $(build.artifactStagingDirectory)/DerivedData'
                  args: '-enableCodeCoverage YES -derivedDataPath $(build.artifactStagingDirectory)/DerivedData'
                      
                      #- script: slather
                      #  displayName: 'Run slather'
                      
              - bash: |
                  ./xccov-to-sonarqube-generic.sh $(build.artifactStagingDirectory)/DerivedData/Logs/Test/*.xcresult/ > $(build.artifactStagingDirectory)/DerivedData/sonarqube-generic-coverage.xml
                        
                  #sed -i "s|$(build.artifactStagingDirectory)/|g" test.xml > sonarqube-generic-coverage.xml

                  
              - task: PublishCodeCoverageResults@1
                displayName: 'Publish code coverage report'
                inputs:
                  codeCoverageTool: 'cobertura'
                  summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
                

